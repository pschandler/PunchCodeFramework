@using PunchcodeStudios.UI.Components.Models
@using System.Diagnostics.CodeAnalysis
@inherits InputBase<SelectOption>

<div class="row">
    <select id="@Id" class="form-select @CssClass" @bind="CurrentOption" @oninput="oninput">
        @foreach (var option in AvailableOptions)
        {
            <option value="@option.Value">@option.Text</option>
        }
    </select>
</div>

@code {
    [Parameter]
    public string Id { get; set; } = string.Empty;

    [Parameter]
    public List<SelectOption> AvailableOptions { get; set; } = new List<SelectOption>();

    private void oninput()
    {
        Console.WriteLine("ON INPUT");
    }

    private string CurrentOption
    {
        get => CurrentValue.Value;
        set
        {
            CurrentValue = AvailableOptions.Find(o => o.Value == value);
        }
    }

    [Parameter]
    public List<string> SelectedOptions { get; set; } = new List<string>();

    protected override bool TryParseValueFromString(string value, [MaybeNullWhen(false)] out SelectOption result, [MaybeNullWhen(true)][NotNullWhen(false)] out string validationErrorMessage)
    {
        try
        {
            result = AvailableOptions.First(o => o.Value == value.ToString());
            validationErrorMessage = null;
            return true;
        }
        catch (Exception ex)
        {
            result = null;
            validationErrorMessage = ex.Message;
            return false;
        }
    }
}
